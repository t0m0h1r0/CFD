/* テイラー展開の定義 */
/* f1のテイラー展開 */
f1_expansion: f0 + fp0*h + fpp0*h^2/2 + fppp0*h^3/6 + fpppp0*h^4/24 + fppppp0*h^5/120 + fpppppp0*h^6/720;

/* f2のテイラー展開 */
f2_expansion: f0 + 2*fp0*h + 2*fpp0*h^2 + 4*fppp0*h^3/3 + 2*fpppp0*h^4/3 + 4*fppppp0*h^5/15 + 4*fpppppp0*h^6/45;

/* fp1のテイラー展開 */
fp1_expansion: fp0 + fpp0*h + fppp0*h^2/2 + fpppp0*h^3/6 + fppppp0*h^4/24 + fpppppp0*h^5/120;

/* fp2のテイラー展開 */
fp2_expansion: fp0 + 2*fpp0*h + 2*fppp0*h^2 + 4*fpppp0*h^3/3 + 2*fppppp0*h^4/3 + 4*fpppppp0*h^5/15;

/* fpp1のテイラー展開 */
fpp1_expansion: fpp0 + fppp0*h + fpppp0*h^2/2 + fppppp0*h^3/6 + fpppppp0*h^4/24;

/* fpp2のテイラー展開 */
fpp2_expansion: fpp0 + 2*fppp0*h + 2*fpppp0*h^2 + 4*fppppp0*h^3/3 + 2*fpppppp0*h^4/3;

/* 線形結合の展開 */
linear_combination: a*f1_expansion + b*f2_expansion + c*fp1_expansion*h + d*fp2_expansion*h + r*fpp1_expansion*h^2 + s*fpp2_expansion*h^2 + t*fppp1_expansion + u*fppp2_expansion;

/* 展開して整理 */
expanded: expand(linear_combination);

/* 正しい係数抽出 */
eq0: coeff(coeff(expanded,h,0),f0);
eq1: coeff(coeff(expanded,h,1),fp0);
eq2: coeff(coeff(expanded,h,2),fpp0);
eq3: coeff(coeff(expanded,h,3),fppp0);
eq4: coeff(coeff(expanded,h,4),fpppp0);
eq5: coeff(coeff(expanded,h,5),fppppp0);
eq6: coeff(coeff(expanded,h,6),fpppppp0);

/* 3つのCCD解 */
/* 2-5がゼロ */
solution1: solve([eq1=1, eq2=0, eq3=0, eq4=0, eq5=0, s=0, t=0, u=0], [a, b, c, d, r, s, t, u]);

/* 1,3-5がゼロ */
solution2: solve([eq1=0, eq2=1, eq3=0, eq4=0, eq5=0, s=0, t=0, u=0], [a, b, c, d, r, s, t, u]);

/* 1-2,4-5がゼロ */
solution3: solve([eq1=0, eq2=0, eq3=1, eq4=0, eq5=0, s=0, t=0, u=0], [a, b, c, d, r, s, t, u]);

/* original式の修正（u項をfpp2*h^3に修正） */
original: a*f1 + b*f2 + c*fp1*h + d*fp2*h + r*fpp1*h^2 + s*fpp2*h^2 + t*fppp1*h^3 + u*fppp2*h^3;

ccd_1: expand(subst(solution1[1],linear_combination-original));
ccd_2: expand(subst(solution2[1],linear_combination-original));
ccd_3: expand(subst(solution3[1],linear_combination-original));

matrix_B0: matrix(
    [coeff(coeff(ccd_1,h,1),fp0), coeff(coeff(ccd_1,h,2),fpp0), coeff(coeff(ccd_1,h,3),fppp0)],
    [coeff(coeff(ccd_2,h,1),fp0), coeff(coeff(ccd_2,h,2),fpp0), coeff(coeff(ccd_2,h,3),fppp0)],
    [coeff(coeff(ccd_3,h,1),fp0), coeff(coeff(ccd_3,h,2),fpp0), coeff(coeff(ccd_3,h,3),fppp0)]
);
matrix_C0: matrix(
    [coeff(coeff(ccd_1,h,1),fp1), coeff(coeff(ccd_1,h,2),fpp1), coeff(coeff(ccd_1,h,3),fppp1)],
    [coeff(coeff(ccd_2,h,1),fp1), coeff(coeff(ccd_2,h,2),fpp1), coeff(coeff(ccd_2,h,3),fppp1)],
    [coeff(coeff(ccd_3,h,1),fp1), coeff(coeff(ccd_3,h,2),fpp1), coeff(coeff(ccd_3,h,3),fppp1)]
);
matrix_D0: matrix(
    [coeff(coeff(ccd_1,h,1),fp2), coeff(coeff(ccd_1,h,2),fpp2), coeff(coeff(ccd_1,h,3),fppp2)],
    [coeff(coeff(ccd_2,h,1),fp2), coeff(coeff(ccd_2,h,2),fpp2), coeff(coeff(ccd_2,h,3),fppp2)],
    [coeff(coeff(ccd_3,h,1),fp2), coeff(coeff(ccd_3,h,2),fpp2), coeff(coeff(ccd_3,h,3),fppp2)]
);
matrix_K0: matrix(
    [-coeff(coeff(ccd_1,h,0),f0), -coeff(coeff(ccd_1,h,0),f1), -coeff(coeff(ccd_1,h,0),f2)],
    [-coeff(coeff(ccd_2,h,0),f0), -coeff(coeff(ccd_2,h,0),f1), -coeff(coeff(ccd_2,h,0),f2)],
    [-coeff(coeff(ccd_3,h,0),f0), -coeff(coeff(ccd_3,h,0),f1), -coeff(coeff(ccd_3,h,0),f2)]
);


